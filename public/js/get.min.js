const STATIONCODE=getQueryVariable("station"),PAGES=5,REFRESHTIME=10,TABLEELEMENT="#departures";function calcRows(){$(`${TABLEELEMENT} tbody`).append('<tr class="tempRow"><td style="text-align: center;" colspan="4">&nbsp;</td></tr>');let e=$(".tempRow").outerHeight();return $(".tempRow").remove(),Math.floor(($("body").height()-$(".main").outerHeight())/e)}const ROWSPERPAGE=calcRows(),TOTALROWS=5*ROWSPERPAGE;let page;page=getQueryVariable("page")?getQueryVariable("page"):1,services="";let serviceIDs,parameterError,prevError,rowCounter=0,sIDs=[],responseError=!1;function getTrains(e,t,s,r){if("function"!=typeof r)console.error("No callback specified");else{let a=`get/get.php?station=${e}&rows=${t}&type=${s}`;$.get(a,e=>{r(e)})}}function processTrains(e){let t=!1;switch(serviceIDs=[],parameterError=!0,e){case"Invalid station code":return void setStatus(".status",-2,"Invalid station code. Codes should be three letters. To find a station code see: http://www.nationalrail.co.uk/stations_destinations/48541.aspx.");case"No station code supplied":return void setStatus(".status",-2,"No station code supplied. Specify station code as URL parameter 'station'. Codes should be three letters. To find a station code see: http://www.nationalrail.co.uk/stations_destinations/48541.aspx.");case"No type supplied":return void setStatus(".status",-2,"No type supplied. Specify board type as URL parameter 'type'. Acceptible values are departures or arrivals.");case"No type and station code supplied":return void setStatus(".status",-2,"No type or station code supplied. Specify type and station code as URL parameters 'type' and 'station'. Acceptible values are departures or arrivals. To find a station code see: http://www.nationalrail.co.uk/stations_destinations/48541.aspx.");case"Error":return void setStatus(".status",-2,"Something went wrong. This error message should never be seen. The problem lies in get/get.php.");case"No response":case null:parameterError=!1,""!=services&&null!=services?setStatus(".status",-1,"Disconnected. Check internet connection. Your token may be incorrect or rate limit has been exceeded."):setStatus(".status",-2,"Disconnected. Check internet connection. Your token may be incorrect or rate limit has been exceeded.");break;default:parameterError=!1,setStatus(".status",0,"Connected."),null!=e.GetStationBoardResult&&null!=e.GetStationBoardResult.generatedAt&&(e.GetStationBoardResult.generatedAt=null),JSON.stringify(e)!=JSON.stringify(services)&&(services=e,t=!0)}if($(".dataChanged").removeClass("dataChanged"),""!=services&&null!=services&&!0===t){if(rowCounter=0,null!=services.GetStationBoardResult)$(`${TABLEELEMENT} tbody`).empty(),null!=services.GetStationBoardResult.nrccMessages?(addEmptyRows(4),showNRCCNotices("Special Notice",services.GetStationBoardResult.nrccMessages.message)):(addEmptyRows(ROWSPERPAGE/2-1),$(`${TABLEELEMENT} tbody`).append(`<tr><td style="text-align: center;" colspan="4">Welcome to</td></tr>\n                                          <tr><td style="text-align: center;" colspan="4">${services.GetStationBoardResult.locationName}</td></tr>`),rowCounter+=2);else{if(setPage(page,Math.ceil(services.length/ROWSPERPAGE)),"departures"==TYPE)for(i=ROWSPERPAGE*(page-1);i<services.length&&i<ROWSPERPAGE*page;i++){var s=services[i];serviceIDs.push(sanitizeID(s.serviceID)),processService(sanitizeID(s.serviceID),s.serviceType,s.std,s.destination.location,s.platform,s.etd)}else if("arrivals"==TYPE)for(i=ROWSPERPAGE*(page-1);i<services.length&&i<ROWSPERPAGE*page;i++){s=services[i];serviceIDs.push(sanitizeID(s.serviceID)),processService(sanitizeID(s.serviceID),s.serviceType,s.sta,s.origin.location,s.platform,s.eta)}removeDeparted(!0)}addEmptyRows(ROWSPERPAGE-rowCounter)}}function showNRCCNotices(e,t){""!=e&&($(`${TABLEELEMENT} tbody`).append(`<tr><td style="text-align: center;" colspan="4"><strong>${e}</strong></td></tr>\n                                      <tr><td style="text-align: center;" colspan="4">======================================</td></tr>\n                                      <tr><td style="text-align: center;" colspan="4">&nbsp;</td></tr>`),rowCounter+=3),"string"!=typeof t&&null!=t.length&&t.length>1?t.forEach(e=>{showSingleNotice(splitString(removeATag(e._),50,!0))}):showSingleNotice(splitString(removeATag(t._),50,!0))}function showNotices(e,t){""!=e&&($(`${TABLEELEMENT} tbody`).append(`<tr><td style="text-align: center;" colspan="4"><strong>${e}</strong></td></tr>\n                                      <tr><td style="text-align: center;" colspan="4">======================================</td></tr>\n                                      <tr><td style="text-align: center;" colspan="4">&nbsp;</td></tr>`),rowCounter+=3),"string"!=typeof t&&null!=t.length&&t.length>1?t.forEach(e=>{showSingleNotice(splitString(removeATag(e),50,!0))}):showSingleNotice(splitString(removeATag(t),50,!0))}function showSingleNotice(e){"string"==typeof e?($(`${TABLEELEMENT} tbody`).append(`<tr><td colspan="4">&nbsp;</td></tr>\n                                      <tr><td style="text-align: center;" colspan="4">${e}</td></tr>`),rowCounter+=2):"object"==typeof e&&(e.forEach(e=>{$(`${TABLEELEMENT} tbody`).append(`<tr><td style="text-align: center;" colspan="4">${e}</td></tr>`),rowCounter++}),$(`${TABLEELEMENT} tbody`).append('<tr><td colspan="4">&nbsp;</td></tr>'),rowCounter++)}function processService(e,t,s,r,a,n){let o="";if(null!=r.length&&r.length>1){let e="";r.forEach(t=>{""!=e&&(e+=" & "),e+=t.locationName}),r=e.replace("&","&amp;")}else null!=r.via&&(o=r.via),r=r.locationName.replace("&","&amp;");null==a&&"train"!=t?a=t:null==a&&(a=""),0===$(`#${e}`).length?$(`${TABLEELEMENT} tbody`).append(`<tr id="${e}">\n                                        <td headers="dTime" class="dTime">${s}</td>\n                                        <td headers="dDest" class="dDest">${r}</td>\n                                        <td headers="dPlat" class="dPlat">${a}</td>\n                                        <td headers="dExp" class="dExp">${n}</td>\n                                      </tr>`):($(`#${e} td.dTime`).html()!=s&&$(`#${e} td.dTime`).html(s),$(`#${e} td.dDest`).html()!=r&&$(`#${e} td.dDest`).html(r).addClass("dataChanged"),$(`#${e} td.dPlat`).html()!=a&&$(`#${e} td.dPlat`).html(a).addClass("dataChanged"),$(`#${e} td.dExp`).html()!=n&&$(`#${e} td.dExp`).html(n)),rowCounter++}function removeDeparted(){$(".departures tbody tr").each((e,t)=>{-1===serviceIDs.indexOf($(t).attr("id"))&&$(t).remove()})}function setPage(e,t){$(".page").html(`Page <span class="page__number">${e}</span> of <span class="page__number">${t}</span>`)}function setStatus(e,t,s){if(prevError!=t+s)switch(prevError=t+s,t){case-2:console.error(s),removeModifierClasses(e),$(e).addClass("status--disconnected"),addEmptyRows(4),showNotices("Error",s=[s,"See console for more details."]),addEmptyRows(ROWSPERPAGE-rowCounter);break;case-1:console.error(s),removeModifierClasses(e),$(e).addClass("status--disconnected");break;case 0:default:removeModifierClasses(e)}}function addEmptyRows(e){if(e>0)for(let t=0;t<e;t++)$(`${TABLEELEMENT} tbody`).append('<tr><td colspan="4">&nbsp;</td></tr>'),rowCounter++}function removeATag(e){return null!=e.match(/<a\s+(?:[^>]*?\s+)?href="([^"]*)">([^"]*)<\/a>/gi)&&(e=(e=e.replace(/in (?=<a\s+(?:[^>]*?\s+)?href="([^"]*)">([^"]*)<\/a>)/gi,"at ")).replace(/<a\s+(?:[^>]*?\s+)?href="([^"]*)">([^"]*)<\/a>/gi,$(e.match(/<a\s+(?:[^>]*?\s+)?href="([^"]*)">([^"]*)<\/a>/gi)[0]).attr("href").match(/http:\/\/([^\/,\s]+\.[^\/,\s]+?)(?=\/|,|\s|$|\?|#)/gi)[0].replace("http://",""))),null!=e.match(/<[^>]*>/gi)&&(e=e.replace(/<[^>]*>/g,"")),e}function splitString(e,t,s){let r=[];for(e+=" ";e.length>0;){let s=e.substr(0,t);-1!=s.lastIndexOf(" ")?lastInd=s.lastIndexOf(" "):lastInd=s.length-1,""==(s=s.substr(0,Math.min(s.length,lastInd)))&&(s=e),e=e.replace(s,"")," "!=s&&r.push(s.trim())}return r}getTrains(STATIONCODE,TOTALROWS,TYPE,processTrains);let sync=setInterval(()=>{!1===parameterError&&(new Date).getSeconds()%10==0?(clearInterval(sync),getTrains(STATIONCODE,TOTALROWS,TYPE,processTrains),setInterval(()=>{getTrains(STATIONCODE,TOTALROWS,TYPE,processTrains)},1e4)):parameterError&&clearInterval(sync)},50);